#! /bin/sh
#
# Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software
# Foundation, Inc.
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi




# PATH needs CR
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
as_nl='
'
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  { (exit 1); exit 1; }
fi

# Work around bugs in pre-3.0 UWIN ksh.
for as_var in ENV MAIL MAILPATH
do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# CDPATH.
$as_unset CDPATH


if test "x$CONFIG_SHELL" = x; then
  if (eval ":") 2>/dev/null; then
  as_have_required=yes
else
  as_have_required=no
fi

  if test $as_have_required = yes && 	 (eval ":
(as_func_return () {
  (exit \$1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test \$exitcode = 0) || { (exit 1); exit 1; }

(
  as_lineno_1=\$LINENO
  as_lineno_2=\$LINENO
  test \"x\$as_lineno_1\" != \"x\$as_lineno_2\" &&
  test \"x\`expr \$as_lineno_1 + 1\`\" = \"x\$as_lineno_2\") || { (exit 1); exit 1; }
") 2> /dev/null; then
  :
else
  as_candidate_shells=
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  case $as_dir in
	 /*)
	   for as_base in sh bash ksh sh5; do
	     as_candidate_shells="$as_candidate_shells $as_dir/$as_base"
	   done;;
       esac
done
IFS=$as_save_IFS


      for as_shell in $as_candidate_shells $SHELL; do
	 # Try only shells that exist, to save several forks.
	 if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		{ ("$as_shell") 2> /dev/null <<\_ASEOF
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi


:
_ASEOF
}; then
  CONFIG_SHELL=$as_shell
	       as_have_required=yes
	       if { "$as_shell" 2> /dev/null <<\_ASEOF
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi


:
(as_func_return () {
  (exit $1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = "$1" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test $exitcode = 0) || { (exit 1); exit 1; }

(
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2") || { (exit 1); exit 1; }

_ASEOF
}; then
  break
fi

fi

      done

      if test "x$CONFIG_SHELL" != x; then
  for as_var in BASH_ENV ENV
        do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
        done
        export CONFIG_SHELL
        exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
fi


    if test $as_have_required = no; then
  echo This script requires a shell more modern than all the
      echo shells that I found on your system.  Please install a
      echo modern shell, or manually run the script under such a
      echo shell if you do have one.
      { (exit 1); exit 1; }
fi


fi

fi



(eval "as_func_return () {
  (exit \$1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test \$exitcode = 0") || {
  echo No shell found that supports shell functions.
  echo Please tell autoconf@gnu.org about your system,
  echo including any error possibly output before this
  echo message
}



  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line after each line using $LINENO; the second 'sed'
  # does the real work.  The second script uses 'N' to pair each
  # line-number line with the line containing $LINENO, and appends
  # trailing '-' during substitution so that $LINENO is not a special
  # case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # scripts with optimization help from Paolo Bonzini.  Blame Lee
  # E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in
-n*)
  case `echo 'x\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  *)   ECHO_C='\c';;
  esac;;
*)
  ECHO_N='-n';;
esac

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir
fi
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  as_ln_s='ln -s'
  # ... but there are two gotchas:
  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
  # In both cases, we have to default to `cp -p'.
  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
    as_ln_s='cp -p'
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
        test -d "$1/.";
      else
	case $1 in
        -*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"



SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"

# Load the config file.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || { echo "$as_me: error: invalid content: $at_file" >&2
   { (exit 1); exit 1; }; }
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: ${at_top_build_prefix=$at_top_builddir}

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir in srcdir top_srcdir top_build_prefix
  do
    at_val=`eval echo '${'at_$at_dir'}'`
    eval "$at_dir=\$at_val/../.."
  done
fi

# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?
at_verbose=:
at_quiet=echo

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# Test groups to run
at_groups=

# The directory we are in.
at_dir=`pwd`
# The directory the whole suite works in.
# Should be absolutely to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The file containing the location of the last AT_CHECK.
at_check_line_file=$at_suite_dir/at-check-line
# The file containing the exit status of the last command.
at_status_file=$at_suite_dir/at-status
# The files containing the output of the tested commands.
at_stdout=$at_suite_dir/at-stdout
at_stder1=$at_suite_dir/at-stder1
at_stderr=$at_suite_dir/at-stderr
# The file containing dates.
at_times_file=$at_suite_dir/at-times

# List of the tested programs.
at_tested=''
# List of the all the test groups.
at_groups_all=' banner-1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 banner-2 18 19 20 21 22 23 24 25 26 27 banner-3 28 29 30 31 32 banner-4 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 banner-5 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 banner-6 70 banner-7 71 72 73 74 banner-8 75 banner-9 76 banner-10 77 banner-11 78 79 80 81 82 83 84 85 86 banner-12 87 banner-13 88 89 90 91 92 93 banner-14 94 95 banner-15 96 97 banner-16 98 99 100 101 102 banner-17 103 104 banner-18 105 106 banner-19 107'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;types.at:24;Vector (vector_t): ;vector vector_t;
2;types.at:29;Vector (more) (vector_t): ;vector vector_t;
3;types.at:34;Matrix (matrix_t): ;matrix matrix_t;
4;types.at:39;Matrix (more) (matrix_t): ;matrix matrix_t;
5;types.at:44;Double ended queue (dqueue_t): ;dqueue double queue dqueue_t;
6;types.at:49;Vector of pointers (vector_ptr_t): ;vector pointers vector_ptr_t;
7;types.at:54;Stack (stack_t): ;stack stack_t;
8;types.at:59;Heap (heap_t): ;heap heap_t;
9;types.at:64;Indexed heap (indheap_t): ;indexed heap indheap_t;
10;types.at:69;Doubly indexed heap (d_indheap_t): ;doubly indexed heap d_indheap_t;
11;types.at:74;String vector (igraph_strvector_t): ;string vector igraph_strvector_t;
12;types.at:79;Trie (igraph_trie_t): ;trie igraph_trie_t;
13;types.at:84;Partial Sum-Tree (igraph_psumtree_t): ;partial sumtree igraph_psumtree_t;
14;types.at:89;Three dimensional array (igraph_array3_t): ;array array3 three dimensional array;
15;types.at:94;Hash table (string->string) (igraph_hashtable_t): ;igraph_hashtable_t hash table;
16;types.at:99;Special heap for minimum cuts (igraph_i_cutheap_t): ;heap minimum cut;
17;types.at:104;Set (igraph_set_t): ;set igraph_set_t;
18;basic.at:26;Creating an empty graph (igraph_empty): ;igraph_empty;
19;basic.at:31;Copying a graph (igraph_copy): ;igraph_copy igraph_create;
20;basic.at:36;Adding edges to a graph (igraph_add_edges): ;igraph_add_edges;
21;basic.at:42;Adding vertices (igraph_add_vertices): ;igraph_add_vertices;
22;basic.at:47;Deleting edges (igraph_delete_edges): ;igraph_delete_vertices;
23;basic.at:52;Deleting vertices (igraph_delete_vertices): ;igraph_delete_vertices;
24;basic.at:57;Neighbors (igraph_neighbors): ;igraph_neighbors;
25;basic.at:62;Is the graph directed? (igraph_is_directed): ;igraph_is_directed;
26;basic.at:67;Degree of the vertices (igraph_degree): ;igraph_degree;
27;basic.at:72;Query edge ids (igraph_get_eid): ;igraph_get_eid edge id;
28;iterators.at:24;Vertices in a vector (igraph_vs_vector): ;iterator vector igraph_vs_vector igraph_vs_vectorview;
29;iterators.at:29;Non-adjacent vertices (igraph_vs_nonadj): ;iterator igraph_vs_nonadj;
30;iterators.at:34;Sequence (igraph_vs_seq): ;iterator igraph_vs_seq seq sequence;
31;iterators.at:49;Edges given by end points (igraph_es_pairs): ;iterator igraph_es_pairs;
32;iterators.at:54;Edges in a path (igraph_es_path): ;iterator, igraph_es_path;
33;structure_generators.at:24;Simple graph creation (igraph_create): ;igraph_create;
34;structure_generators.at:29;Barabasi-Albert model (igraph_barabasi_game):;barabasi barabasi-albert igraph_barabasi_game;
35;structure_generators.at:34;Erdos-Renyi model (igraph_erdos_renyi_game):;erdos renyi erdos-renyi igraph_erdos_renyi_game;
36;structure_generators.at:39;Degree sequence(igraph_degree_sequence_game):;degree sequence igraph_degree_sequence_game;
37;structure_generators.at:44;Growing random (igraph_growing_random_game):;growing random game igraph_growing_random_game;
38;structure_generators.at:49;Preference model (igraph_preference_game):;preference game igraph_preference_game igraph_asymmetric_preference_game;
39;structure_generators.at:54;From adjacency matrix (igraph_adjacency):;adjacency matrix igraph_adjacency;
40;structure_generators.at:59;From weighted adjacency matrix (igraph_weighted_adjacency):;weighted adjacency matrix igraph_weighted_adjacency;
41;structure_generators.at:64;Star graph (igraph_star):;star igraph_star;
42;structure_generators.at:69;Lattice graph (igraph_lattice):;lattice igraph_lattice;
43;structure_generators.at:74;Ring graph (igraph_ring):;ring igraph_ring;
44;structure_generators.at:79;Tree graph (igraph_tree):;tree igraph_tree;
45;structure_generators.at:84;Full graph (igraph_full):;full igraph_full;
46;structure_generators.at:89;Graph atlas (igraph_atlas):;atlas igraph_atlas;
47;structure_generators.at:94;Small graph (igraph_small):;graph constructor small igraph_small;
48;structure_generators.at:99;Geomeric random graphs (igraph_grg_game):;graph GRG grg geometric random graph igraph_grg_game;
49;structure_generators.at:104;Graphs in LCF notation (igraph_lcf{,_vector}):;LCF graph constructor;
50;structural_properties.at:24;Diameter of a graph (igraph_diameter):;igraph_diameter;
51;structural_properties.at:29;Average geodesic length (igraph_average_path_length): ;igraph_average_path_length;
52;structural_properties.at:34;Google PageRank (igraph_pagerank): ;igraph_pagerank;
53;structural_properties.at:39;Random rewiring (igraph_rewire): ;igraph_rewire;
54;structural_properties.at:44;Get the shortest paths (igraph_get_shortest_paths): ;igraph_get_shortest_paths shortest paths geodesic;
55;structural_properties.at:50;Weighted shortest paths (Dijkstra): ;igraph_shortest_paths_dijkstra Dijkstra shortest paths geodesic;
56;structural_properties.at:55;Weighted shortest paths (Bellman-Ford): ;igraph_shortest_paths_bellman_ford Bellman-Ford shortest paths geodesic;
57;structural_properties.at:60;Get the weighted shortest paths (Dijkstra): ;igraph_get_shortest_paths_dijkstra Dijkstra shortest paths geodesic;
58;structural_properties.at:66;Edge betweenness (igraph_edge_betweenness): ;igraph_edge_betweenness betwenness;
59;structural_properties.at:72;Transitivity (igraph_transitivity): ;igraph_transitivity transitivity igraph_transitivity_undirected;
60;structural_properties.at:77;Reciprocity (igraph_reciprocity): ;igraph_reciprocity reciprocity;
61;structural_properties.at:82;Minimum spanning tree (igraph_minimum_spanning_tree_*): ;igraph_minimum_spanning_tree_prim Prim minimum spanning tree;
62;structural_properties.at:88;Cocitation and bibcoupling (igraph_cocitation,igraph_bibcoupling):;cocitation bibliographic coupling;
63;structural_properties.at:93;Similarity coefficients (igraph_similarity_*):;similarity jaccard dice;
64;structural_properties.at:98;Simplification of non-simple graphs (igraph_simplify): ;simplify multiple edge loop edges non-simple graphs simple graphs;
65;structural_properties.at:103;Topological sorting (igraph_topological_sorting, igraph_is_dag): ;topological sorting directed acyclic graphs;
66;structural_properties.at:108;Loop edges test (igraph_is_loop): ;loop edge igraph_is_loop;
67;structural_properties.at:113;Multiple edges test (igraph_is_multiple): ;multiple edge parallel edge igraph_is_multiple;
68;structural_properties.at:118;Girth (igraph_girth): ;girth igraph_girth;
69;structural_properties.at:123;Convergence degree (igraph_convergence_degree): ;edge convergence degree igraph_convergence_degree;
70;components.at:24;Decompose a graph (igraph_decompose):;igraph_decompose decompose component;
71;layout.at:24;Large Graph Layout (igraph_layout_lgl):;igraph_layout_lgl LGL;
72;layout.at:29;Reingold-Tilford tree layout (igraph_layout_reingold_tilford;reingold tilford tree layout igraph_layout_reingold_tilford;
73;layout.at:35;Covering circle and sphere (igraph_i_layout_sphere_{2,3}d):;covering circle sphere layout;
74;layout.at:40;Merging layouts (igraph_i_layout_merge):;layout merge;
75;visitors.at:24;Breadth-first search (igraph_bfs):;igraph_bfs bfs breadth-first visitor;
76;topology.at:24;The isomorphism class of a subgraph (igraph_isolass_subgraph);isomorph isomorphism class motif;
77;motifs.at:24;RAND-ESU algorithm (igraph_motifs_randesu);motif RAND-ESU;
78;foreign.at:24;Reading Pajek (igraph_read_graph_pajek):;igraph_read_graph_pajek foreign pajek;
79;foreign.at:29;GraphML (igraph_{read,write}_graph_graphml):;igraph_read_graph_graphml igraph_write_graph_graphml foreign graphml;
80;foreign.at:35;Writing Pajek (igraph_write_graph_pajek):;igraph_write_graph_pajek foreign pajek;
81;foreign.at:41;Reading an LGL file (igraph_read_graph_lgl):;igraph_read_graph_lgl LGL foreign;
82;foreign.at:48;Writing LGL (igraph_write_graph_lgl):;igraph_write_graph_lgl foreign LGL;
83;foreign.at:53;Reading a graph from the graph database (igraph_read_graph_graphdb):;igraph_read_graph_graphdb foreign graphdb database isomorphism;
84;foreign.at:60;Reading a GML file (igraph_read_graph_gml):;igraph_read_graph_gml foreign GML;
85;foreign.at:65;Writing a DOT file (igraph_write_graph_dot):;igraph_write_graph_dot foreign DOT GraphViz;
86;foreign.at:70;Different line endings:;igraph_read_graph_pajek igraph_write_graph_pajek
	foreign line ending lineending;
87;other.at:24;Convex hull calculation (igraph_convex_hull):;igraph_convex_hull other;
88;operators.at:24;Disjoint union (igraph_disjoint_union, igraph_dosjoint_union_many):;igraph_disjoint_union, igraph_disjoint_union_many,
	disjoint_union, union;
89;operators.at:31;Union (igraph_union, igraph_union_many):;igraph_union, igraph_union_many, union;
90;operators.at:37;Intersection (igraph_intersection, igraph_intersection_many):;igraph_intersection, igraph_intersection_many, intersection;
91;operators.at:43;Difference (igraph_difference):;igraph_difference, difference;
92;operators.at:49;Complementer (igraph_complementer):;igraph_complementer, complementer;
93;operators.at:55;Composition (igraph_compose):;igraph_composition, composition, compose;
94;conversion.at:24;Directed to undirected (igraph_to_undirected):;igraph_to_undirected directedness undirected directed;
95;conversion.at:30;Graphs from adjacency list (igraph_adjlist):;igraph_adjlist adjacency list adjlist;
96;flow.at:24;Maximum flow (igraph_maxflow): ;maximum flow maxflow minimum cut;
97;flow.at:29;Minimum cut (igraph_mincut): ;minimum cut Stoer-Wagner;
98;community.at:24;Spinglass clustering (igraph_spinglass_community): ;spin glass spinglass community clustering;
99;community.at:29;Walktrap community structure (igraph_walktrap_community): ;random walk community structure clustering walktrap;
100;community.at:34;Edge betweenness community structure (igraph_community_edge_betweenness): ;community structure edge betweenness Newman Girvan;
101;community.at:40;Modularity optimization (igraph_community_fastgreedy): ;community structure Clauset Newman Moore modularity greedy;
102;community.at:46;Leading eigenvector community structure (igraph_community_leading_eigenvector) :;community structure leading eigenvector Newman;
103;cliques.at:26;Calculating cliques (igraph_cliques): ;igraph_cliques, igraph_maximal_cliques, igraph_clique_number;
104;cliques.at:31;Calculating independent vertex sets (igraph_independent_vertex_sets): ;igraph_independent_vertex_sets,
	igraph_maximal_independent_vertex_sets,
	igraph_independence_number;
105;attributes.at:24;Reading a Pajek file with attributes:;pajek attributes;
106;attributes.at:30;Writing an attributed graph in GML and GraphML:;gml GML graphml GraphML attributes;
107;arpack.at:24;Eigenvector centrality (igraph_eigenvector_centrality):;eigenvector centrality arpack ARPACK;
"

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=*) at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'` ;;
  *)   at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	test -d "$at_suite_dir" &&
	  find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	rm -f -r "$at_suite_dir" "$at_suite_log"
	exit 0
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=echo; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'; at_traceoff='set +x'
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/^.* \('$at_range_start' \)/\1/'`
	at_groups="$at_groups$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/^.*\( '$at_range_start' \)/\1/' \
	      -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	at_groups_selected=`echo "$at_groups_selected" | sed 's/;.*//'`
	# Smash the newlines.
	at_groups="$at_groups`echo $at_groups_selected` "
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	expr "x$at_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
	  { echo "$as_me: error: invalid variable name: $at_envvar" >&2
   { (exit 1); exit 1; }; }
	at_value=`echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	eval "$at_envvar='$at_value'"
	export $at_envvar
	# Propagate to debug scripts.
	at_debug_args="$at_debug_args $at_envvar='$at_value'"
	;;

     *) echo "$as_me: invalid option: $at_option" >&2
	echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Selected test groups.
if test -z "$at_groups"; then
  at_groups=$at_groups_all
else
  # Sort the tests, removing duplicates:
  at_groups=`echo $at_groups | tr ' ' "$as_nl" | sort -nu`
  # and add banners.  (Passing at_groups_all is tricky--see the comment
  # starting with "Passing at_groups is tricky.")
  at_groups=`echo "$at_groups$as_nl $at_groups_all" |
    awk 'BEGIN { FS = "@" } # Effectively switch off field splitting.
	/^$/ { next }  # Ignore the empty line.
	!/ / { groups++; selected[$ 0] = 1; next }
	# The last line, containing at_groups_all.
	{
		n = split($ 0, a, " ")
		# If there are several tests, select their banners:
		if (groups > 1) {
			for (i = 1; i <= n; i++) {
				if (a[i] ~ /^banner-/)
					banner = a[i]
				else if (banner != "" && selected[a[i]] == 1)
					selected[banner] = 1
			}
		}
		for (i = 1; i <= n; i++)
			if (selected[a[i]] == 1)
				list = list " " a[i]
		print list
	}'`
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $0 AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
cat <<_ATEOF

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF

Execution tuning:
  -k, --keywords=KEYWORDS
	         select the tests matching all the comma-separated KEYWORDS
	         multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
	         default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
	         default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF

Report bugs to <csardi@rmki.kfki.hu>.
_ATEOF
  exit 0
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF
igraph 0.5.1 test suite: igraph test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Passing at_groups is tricky.  We cannot use it to form a literal string
  # or regexp because of the limitation of AIX awk.  And Solaris' awk
  # doesn't grok more than 99 fields in a record, so we have to use `split'.
  echo "$at_groups$as_nl$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 NR == 1 {
	   for (n = split($ 0, a, " "); n; n--) selected[a[n]] = 1
	   next
	 }
	 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) printf "      %s\n", $ 4
	   }
	 }'
  exit 0
fi
if $at_version_p; then
  echo "$as_me (igraph 0.5.1)"
  cat <<\_ACEOF

Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software
Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ACEOF
  exit 0
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites, AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`echo $AUTOTEST_PATH | sed "s&:&$PATH_SEPARATOR&g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -n "$at_path" && at_path=$at_path$PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    at_path=$at_path$as_dir
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      at_path=$at_path$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$at_top_build_prefix$as_dir$PATH_SEPARATOR
      at_path=$at_path$at_top_srcdir/$as_dir
    fi
    ;;
esac
done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
PATH=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_dir=`(cd "$as_dir" && pwd) 2>/dev/null`
test -d "$as_dir" || continue
case $PATH in
	          $as_dir                 | \
	          $as_dir$PATH_SEPARATOR* | \
  *$PATH_SEPARATOR$as_dir                 | \
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR* ) ;;

  '') PATH=$as_dir ;;
   *) PATH=$PATH$PATH_SEPARATOR$as_dir ;;
esac
done
IFS=$as_save_IFS

export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.

if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
cat <<\_ASBOX
## -------------------------------- ##
## igraph 0.5.1 test suite: igraph. ##
## -------------------------------- ##
_ASBOX
{
  cat <<\_ASBOX
## -------------------------------- ##
## igraph 0.5.1 test suite: igraph. ##
## -------------------------------- ##
_ASBOX
  echo

  echo "$as_me: command line was:"
  echo "  $ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name ChangeLog -print`
    do
      echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

    {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done
IFS=$as_save_IFS

}
    echo
  fi

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done

  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -f "$as_dir/$at_program" && break
done
IFS=$as_save_IFS

  if test -f "$as_dir/$at_program"; then
    {
      echo "$at_srcdir/testsuite.at:22: $as_dir/$at_program --version"
      "$as_dir/$at_program" --version
      echo
    } >&5 2>&1
  else
    { { echo "$as_me:$LINENO: error: cannot find $at_program" >&5
echo "$as_me: error: cannot find $at_program" >&2;}
   { (exit 1); exit 1; }; }
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
echo "$as_me: starting at: $at_start_date" >&5
at_xpass_list=
at_xfail_list=
at_pass_list=
at_fail_list=
at_skip_list=
at_group_count=0

# Create the master directory if it doesn't already exist.
test -d "$at_suite_dir" ||
  mkdir "$at_suite_dir" ||
  { { echo "$as_me:$LINENO: error: cannot create '$at_suite_dir'" >&5
echo "$as_me: error: cannot create '$at_suite_dir'" >&2;}
   { (exit 1); exit 1; }; }

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi


for at_group in $at_groups
do
  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  case $at_group in
    banner-*)
      at_group_log=$at_suite_log
      ;;

    *)
      at_group_normalized=$at_group

  while :; do
    case $at_group_normalized in #(
    $at_format*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done


      # Create a fresh directory for the next test group, and enter.
      at_group_dir=$at_suite_dir/$at_group_normalized
      at_group_log=$at_group_dir/$as_me.log
      if test -d "$at_group_dir"; then
	find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	rm -fr "$at_group_dir"
      fi
      # Be tolerant if the above `rm' was not able to remove the directory.
      { as_dir=$at_group_dir
  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
echo "$as_me: error: cannot create directory $as_dir" >&2;}
   { (exit 1); exit 1; }; }; }
      cd $at_group_dir
      ;;
  esac

  echo 0 > "$at_status_file"

  # Clearly separate the test groups when verbose.
  test $at_group_count != 0 && $at_verbose

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log
  if test $at_verbose = echo; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi

  case $at_group in

  banner-1 ) # Banner 1. types.at:22
    cat <<\_ATEOF

Utility types (vector_t, etc.)

_ATEOF
    ;;

  1 ) # 1. types.at:24: Vector (vector_t):
    at_setup_line='types.at:24'
    at_desc="Vector (vector_t): "
    $at_quiet $ECHO_N "  1: Vector (vector_t):                             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "1. types.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:26: \$CC \${abs_top_srcdir}/examples/simple/vector.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/vector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/vector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:26: cp \${abs_top_srcdir}/examples/'simple/vector.out' expout"
echo types.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/vector.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/vector.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:26: "
echo types.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  2 ) # 2. types.at:29: Vector (more) (vector_t):
    at_setup_line='types.at:29'
    at_desc="Vector (more) (vector_t): "
    $at_quiet $ECHO_N "  2: Vector (more) (vector_t):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "2. types.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:31: \$CC \${abs_top_srcdir}/examples/simple/vector2.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/vector2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/vector2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:31: cp \${abs_top_srcdir}/examples/'simple/vector2.out' expout"
echo types.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/vector2.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/vector2.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:31: "
echo types.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  3 ) # 3. types.at:34: Matrix (matrix_t):
    at_setup_line='types.at:34'
    at_desc="Matrix (matrix_t): "
    $at_quiet $ECHO_N "  3: Matrix (matrix_t):                             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "3. types.at:34: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:36: \$CC \${abs_top_srcdir}/examples/simple/matrix.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/matrix.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/matrix.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:36: cp \${abs_top_srcdir}/examples/'simple/matrix.out' expout"
echo types.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/matrix.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/matrix.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:36: "
echo types.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:36: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  4 ) # 4. types.at:39: Matrix (more) (matrix_t):
    at_setup_line='types.at:39'
    at_desc="Matrix (more) (matrix_t): "
    $at_quiet $ECHO_N "  4: Matrix (more) (matrix_t):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "4. types.at:39: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:41: \$CC \${abs_top_srcdir}/examples/simple/matrix2.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/matrix2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/matrix2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:41: cp \${abs_top_srcdir}/examples/'simple/matrix2.out' expout"
echo types.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/matrix2.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/matrix2.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:41: "
echo types.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:41: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  5 ) # 5. types.at:44: Double ended queue (dqueue_t):
    at_setup_line='types.at:44'
    at_desc="Double ended queue (dqueue_t): "
    $at_quiet $ECHO_N "  5: Double ended queue (dqueue_t):                 $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "5. types.at:44: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:46: \$CC \${abs_top_srcdir}/examples/simple/dqueue.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/dqueue.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/dqueue.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:46: >expout"
echo types.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:46: "
echo types.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:46: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  6 ) # 6. types.at:49: Vector of pointers (vector_ptr_t):
    at_setup_line='types.at:49'
    at_desc="Vector of pointers (vector_ptr_t): "
    $at_quiet $ECHO_N "  6: Vector of pointers (vector_ptr_t):             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "6. types.at:49: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:51: \$CC \${abs_top_srcdir}/examples/simple/vector_ptr.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/vector_ptr.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/vector_ptr.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:51: >expout"
echo types.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:51: "
echo types.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:51: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  7 ) # 7. types.at:54: Stack (stack_t):
    at_setup_line='types.at:54'
    at_desc="Stack (stack_t): "
    $at_quiet $ECHO_N "  7: Stack (stack_t):                               $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "7. types.at:54: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:56: \$CC \${abs_top_srcdir}/examples/simple/stack.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/stack.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/stack.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:56: >expout"
echo types.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:56: "
echo types.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:56: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  8 ) # 8. types.at:59: Heap (heap_t):
    at_setup_line='types.at:59'
    at_desc="Heap (heap_t): "
    $at_quiet $ECHO_N "  8: Heap (heap_t):                                 $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "8. types.at:59: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:61: \$CC \${abs_top_srcdir}/examples/simple/heap.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/heap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/heap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:61: >expout"
echo types.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:61: "
echo types.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:61: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  9 ) # 9. types.at:64: Indexed heap (indheap_t):
    at_setup_line='types.at:64'
    at_desc="Indexed heap (indheap_t): "
    $at_quiet $ECHO_N "  9: Indexed heap (indheap_t):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "9. types.at:64: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:66: \$CC \${abs_top_srcdir}/examples/simple/indheap.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/indheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/indheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:66: >expout"
echo types.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:66: "
echo types.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:66: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  10 ) # 10. types.at:69: Doubly indexed heap (d_indheap_t):
    at_setup_line='types.at:69'
    at_desc="Doubly indexed heap (d_indheap_t): "
    $at_quiet $ECHO_N " 10: Doubly indexed heap (d_indheap_t):             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "10. types.at:69: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:71: \$CC \${abs_top_srcdir}/examples/simple/d_indheap.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/d_indheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/d_indheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:71: cp \${abs_top_srcdir}/examples/'simple/d_indheap.out' expout"
echo types.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/d_indheap.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/d_indheap.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:71: "
echo types.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:71: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  11 ) # 11. types.at:74: String vector (igraph_strvector_t):
    at_setup_line='types.at:74'
    at_desc="String vector (igraph_strvector_t): "
    $at_quiet $ECHO_N " 11: String vector (igraph_strvector_t):            $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "11. types.at:74: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:76: \$CC \${abs_top_srcdir}/examples/simple/igraph_strvector.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_strvector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_strvector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:76: cp \${abs_top_srcdir}/examples/'simple/igraph_strvector.out' expout"
echo types.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_strvector.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_strvector.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:76: "
echo types.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:76: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  12 ) # 12. types.at:79: Trie (igraph_trie_t):
    at_setup_line='types.at:79'
    at_desc="Trie (igraph_trie_t): "
    $at_quiet $ECHO_N " 12: Trie (igraph_trie_t):                          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "12. types.at:79: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:81: \$CC \${abs_top_srcdir}/examples/simple/igraph_trie.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_trie.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_trie.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:81: cp \${abs_top_srcdir}/examples/'simple/igraph_trie.out' expout"
echo types.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_trie.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_trie.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:81: "
echo types.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:81: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  13 ) # 13. types.at:84: Partial Sum-Tree (igraph_psumtree_t):
    at_setup_line='types.at:84'
    at_desc="Partial Sum-Tree (igraph_psumtree_t): "
    $at_quiet $ECHO_N " 13: Partial Sum-Tree (igraph_psumtree_t):          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "13. types.at:84: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:86: \$CC \${abs_top_srcdir}/examples/simple/igraph_psumtree.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_psumtree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_psumtree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:86: >expout"
echo types.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:86: "
echo types.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:86: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  14 ) # 14. types.at:89: Three dimensional array (igraph_array3_t):
    at_setup_line='types.at:89'
    at_desc="Three dimensional array (igraph_array3_t): "
    $at_quiet $ECHO_N " 14: Three dimensional array (igraph_array3_t):     $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "14. types.at:89: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:91: \$CC \${abs_top_srcdir}/examples/simple/igraph_array.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_array.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_array.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:91: cp \${abs_top_srcdir}/examples/'simple/igraph_array.out' expout"
echo types.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_array.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_array.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:91: "
echo types.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:91: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  15 ) # 15. types.at:94: Hash table (string->string) (igraph_hashtable_t):
    at_setup_line='types.at:94'
    at_desc="Hash table (string->string) (igraph_hashtable_t): "
    $at_quiet $ECHO_N " 15: Hash table (string->string) (igraph_hashtable_t): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "15. types.at:94: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:96: \$CC \${abs_top_srcdir}/examples/simple/igraph_hashtable.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_hashtable.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_hashtable.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:96: cp \${abs_top_srcdir}/examples/'simple/igraph_hashtable.out' expout"
echo types.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_hashtable.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_hashtable.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:96: "
echo types.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:96: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  16 ) # 16. types.at:99: Special heap for minimum cuts (igraph_i_cutheap_t):
    at_setup_line='types.at:99'
    at_desc="Special heap for minimum cuts (igraph_i_cutheap_t): "
    $at_quiet $ECHO_N " 16: Special heap for minimum cuts (igraph_i_cutheap_t): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "16. types.at:99: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:101: \$CC \${abs_top_srcdir}/examples/simple/igraph_i_cutheap.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_i_cutheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_i_cutheap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:101: cp \${abs_top_srcdir}/examples/'simple/igraph_i_cutheap.out' expout"
echo types.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_i_cutheap.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_i_cutheap.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:101: "
echo types.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:101: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  17 ) # 17. types.at:104: Set (igraph_set_t):
    at_setup_line='types.at:104'
    at_desc="Set (igraph_set_t): "
    $at_quiet $ECHO_N " 17: Set (igraph_set_t):                            $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "17. types.at:104: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/types.at:106: \$CC \${abs_top_srcdir}/examples/simple/igraph_set.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo types.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_set.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_set.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:106: cp \${abs_top_srcdir}/examples/'simple/igraph_set.out' expout"
echo types.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_set.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_set.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:106: "
echo types.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/types.at:106: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo types.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/types.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-2 ) # Banner 2. basic.at:24
    cat <<\_ATEOF

Basic (interface) functions.

_ATEOF
    ;;

  18 ) # 18. basic.at:26: Creating an empty graph (igraph_empty):
    at_setup_line='basic.at:26'
    at_desc="Creating an empty graph (igraph_empty): "
    $at_quiet $ECHO_N " 18: Creating an empty graph (igraph_empty):        $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "18. basic.at:26: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:28: \$CC \${abs_top_srcdir}/examples/simple/igraph_empty.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_empty.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_empty.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:28: >expout"
echo basic.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:28: "
echo basic.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:28: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  19 ) # 19. basic.at:31: Copying a graph (igraph_copy):
    at_setup_line='basic.at:31'
    at_desc="Copying a graph (igraph_copy): "
    $at_quiet $ECHO_N " 19: Copying a graph (igraph_copy):                 $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "19. basic.at:31: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:33: \$CC \${abs_top_srcdir}/examples/simple/igraph_copy.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_copy.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_copy.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:33: >expout"
echo basic.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:33: "
echo basic.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:33: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  20 ) # 20. basic.at:36: Adding edges to a graph (igraph_add_edges):
    at_setup_line='basic.at:36'
    at_desc="Adding edges to a graph (igraph_add_edges): "
    $at_quiet $ECHO_N " 20: Adding edges to a graph (igraph_add_edges):    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "20. basic.at:36: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:38: \$CC \${abs_top_srcdir}/examples/simple/igraph_add_edges.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:38 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_add_edges.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_add_edges.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:38: cp \${abs_top_srcdir}/examples/'simple/igraph_add_edges.out' expout"
echo basic.at:38 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_add_edges.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_add_edges.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:38: "
echo basic.at:38 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:38: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:38 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  21 ) # 21. basic.at:42: Adding vertices (igraph_add_vertices):
    at_setup_line='basic.at:42'
    at_desc="Adding vertices (igraph_add_vertices): "
    $at_quiet $ECHO_N " 21: Adding vertices (igraph_add_vertices):         $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "21. basic.at:42: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:44: \$CC \${abs_top_srcdir}/examples/simple/igraph_add_vertices.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:44 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_add_vertices.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_add_vertices.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:44: >expout"
echo basic.at:44 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:44: "
echo basic.at:44 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:44: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:44 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  22 ) # 22. basic.at:47: Deleting edges (igraph_delete_edges):
    at_setup_line='basic.at:47'
    at_desc="Deleting edges (igraph_delete_edges): "
    $at_quiet $ECHO_N " 22: Deleting edges (igraph_delete_edges):          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "22. basic.at:47: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:49: \$CC \${abs_top_srcdir}/examples/simple/igraph_delete_edges.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:49 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_delete_edges.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_delete_edges.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:49: >expout"
echo basic.at:49 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:49: "
echo basic.at:49 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:49: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:49 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  23 ) # 23. basic.at:52: Deleting vertices (igraph_delete_vertices):
    at_setup_line='basic.at:52'
    at_desc="Deleting vertices (igraph_delete_vertices): "
    $at_quiet $ECHO_N " 23: Deleting vertices (igraph_delete_vertices):    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "23. basic.at:52: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:54: \$CC \${abs_top_srcdir}/examples/simple/igraph_delete_vertices.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:54 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_delete_vertices.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_delete_vertices.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:54: >expout"
echo basic.at:54 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:54: "
echo basic.at:54 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:54: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:54 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  24 ) # 24. basic.at:57: Neighbors (igraph_neighbors):
    at_setup_line='basic.at:57'
    at_desc="Neighbors (igraph_neighbors): "
    $at_quiet $ECHO_N " 24: Neighbors (igraph_neighbors):                  $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "24. basic.at:57: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:59: \$CC \${abs_top_srcdir}/examples/simple/igraph_neighbors.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:59 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_neighbors.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_neighbors.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:59: cp \${abs_top_srcdir}/examples/'simple/igraph_neighbors.out' expout"
echo basic.at:59 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_neighbors.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_neighbors.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:59: "
echo basic.at:59 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:59: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:59 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  25 ) # 25. basic.at:62: Is the graph directed? (igraph_is_directed):
    at_setup_line='basic.at:62'
    at_desc="Is the graph directed? (igraph_is_directed): "
    $at_quiet $ECHO_N " 25: Is the graph directed? (igraph_is_directed):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "25. basic.at:62: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:64: \$CC \${abs_top_srcdir}/examples/simple/igraph_is_directed.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:64 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_is_directed.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_is_directed.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:64: >expout"
echo basic.at:64 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:64: "
echo basic.at:64 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:64: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:64 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  26 ) # 26. basic.at:67: Degree of the vertices (igraph_degree):
    at_setup_line='basic.at:67'
    at_desc="Degree of the vertices (igraph_degree): "
    $at_quiet $ECHO_N " 26: Degree of the vertices (igraph_degree):        $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "26. basic.at:67: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:69: \$CC \${abs_top_srcdir}/examples/simple/igraph_degree.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:69 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_degree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_degree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:69: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:69: cp \${abs_top_srcdir}/examples/'simple/igraph_degree.out' expout"
echo basic.at:69 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_degree.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_degree.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:69: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:69: "
echo basic.at:69 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:69: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:69: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:69 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:69: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  27 ) # 27. basic.at:72: Query edge ids (igraph_get_eid):
    at_setup_line='basic.at:72'
    at_desc="Query edge ids (igraph_get_eid): "
    $at_quiet $ECHO_N " 27: Query edge ids (igraph_get_eid):               $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "27. basic.at:72: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/basic.at:74: \$CC \${abs_top_srcdir}/examples/simple/igraph_get_eid.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo basic.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_get_eid.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_get_eid.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:74: cp \${abs_top_srcdir}/examples/'simple/igraph_get_eid.out' expout"
echo basic.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_get_eid.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_get_eid.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:74: "
echo basic.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/basic.at:74: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo basic.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/basic.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-3 ) # Banner 3. iterators.at:22
    cat <<\_ATEOF

Iterators aka vertex and edge sequences

_ATEOF
    ;;

  28 ) # 28. iterators.at:24: Vertices in a vector (igraph_vs_vector):
    at_setup_line='iterators.at:24'
    at_desc="Vertices in a vector (igraph_vs_vector): "
    $at_quiet $ECHO_N " 28: Vertices in a vector (igraph_vs_vector):       $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "28. iterators.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/iterators.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_vs_vector.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo iterators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_vector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_vector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_vs_vector.out' expout"
echo iterators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_vector.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_vector.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:26: "
echo iterators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo iterators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  29 ) # 29. iterators.at:29: Non-adjacent vertices (igraph_vs_nonadj):
    at_setup_line='iterators.at:29'
    at_desc="Non-adjacent vertices (igraph_vs_nonadj): "
    $at_quiet $ECHO_N " 29: Non-adjacent vertices (igraph_vs_nonadj):      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "29. iterators.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/iterators.at:31: \$CC \${abs_top_srcdir}/examples/simple/igraph_vs_nonadj.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo iterators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_nonadj.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_nonadj.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:31: cp \${abs_top_srcdir}/examples/'simple/igraph_vs_nonadj.out' expout"
echo iterators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_nonadj.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_nonadj.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:31: "
echo iterators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo iterators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  30 ) # 30. iterators.at:34: Sequence (igraph_vs_seq):
    at_setup_line='iterators.at:34'
    at_desc="Sequence (igraph_vs_seq): "
    $at_quiet $ECHO_N " 30: Sequence (igraph_vs_seq):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "30. iterators.at:34: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/iterators.at:36: \$CC \${abs_top_srcdir}/examples/simple/igraph_vs_seq.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo iterators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_seq.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_vs_seq.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:36: cp \${abs_top_srcdir}/examples/'simple/igraph_vs_seq.out' expout"
echo iterators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_seq.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_vs_seq.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:36: "
echo iterators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:36: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo iterators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  31 ) # 31. iterators.at:49: Edges given by end points (igraph_es_pairs):
    at_setup_line='iterators.at:49'
    at_desc="Edges given by end points (igraph_es_pairs): "
    $at_quiet $ECHO_N " 31: Edges given by end points (igraph_es_pairs):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "31. iterators.at:49: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/iterators.at:51: \$CC \${abs_top_srcdir}/examples/simple/igraph_es_pairs.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo iterators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_es_pairs.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_es_pairs.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:51: >expout"
echo iterators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:51: "
echo iterators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:51: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo iterators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  32 ) # 32. iterators.at:54: Edges in a path (igraph_es_path):
    at_setup_line='iterators.at:54'
    at_desc="Edges in a path (igraph_es_path): "
    $at_quiet $ECHO_N " 32: Edges in a path (igraph_es_path):              $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "32. iterators.at:54: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/iterators.at:56: \$CC \${abs_top_srcdir}/examples/simple/igraph_es_path.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo iterators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_es_path.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_es_path.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:56: >expout"
echo iterators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:56: "
echo iterators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/iterators.at:56: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo iterators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/iterators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-4 ) # Banner 4. structure_generators.at:22
    cat <<\_ATEOF

Structure generators

_ATEOF
    ;;

  33 ) # 33. structure_generators.at:24: Simple graph creation (igraph_create):
    at_setup_line='structure_generators.at:24'
    at_desc="Simple graph creation (igraph_create): "
    $at_quiet $ECHO_N " 33: Simple graph creation (igraph_create):         $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "33. structure_generators.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_create.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_create.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_create.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:26: >expout"
echo structure_generators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:26: "
echo structure_generators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  34 ) # 34. structure_generators.at:29: Barabasi-Albert model (igraph_barabasi_game):
    at_setup_line='structure_generators.at:29'
    at_desc="Barabasi-Albert model (igraph_barabasi_game):"
    $at_quiet $ECHO_N " 34: Barabasi-Albert model (igraph_barabasi_game):  $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "34. structure_generators.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:31: \$CC \${abs_top_srcdir}/examples/simple/igraph_barabasi_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_barabasi_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_barabasi_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:31: >expout"
echo structure_generators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:31: "
echo structure_generators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  35 ) # 35. structure_generators.at:34: Erdos-Renyi model (igraph_erdos_renyi_game):
    at_setup_line='structure_generators.at:34'
    at_desc="Erdos-Renyi model (igraph_erdos_renyi_game):"
    $at_quiet $ECHO_N " 35: Erdos-Renyi model (igraph_erdos_renyi_game):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "35. structure_generators.at:34: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:36: \$CC \${abs_top_srcdir}/examples/simple/igraph_erdos_renyi_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_erdos_renyi_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_erdos_renyi_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:36: >expout"
echo structure_generators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:36: "
echo structure_generators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:36: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  36 ) # 36. structure_generators.at:39: Degree sequence(igraph_degree_sequence_game):
    at_setup_line='structure_generators.at:39'
    at_desc="Degree sequence(igraph_degree_sequence_game):"
    $at_quiet $ECHO_N " 36: Degree sequence(igraph_degree_sequence_game):  $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "36. structure_generators.at:39: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:41: \$CC \${abs_top_srcdir}/examples/simple/igraph_degree_sequence_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_degree_sequence_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_degree_sequence_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:41: >expout"
echo structure_generators.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:41: "
echo structure_generators.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:41: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  37 ) # 37. structure_generators.at:44: Growing random (igraph_growing_random_game):
    at_setup_line='structure_generators.at:44'
    at_desc="Growing random (igraph_growing_random_game):"
    $at_quiet $ECHO_N " 37: Growing random (igraph_growing_random_game):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "37. structure_generators.at:44: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:46: \$CC \${abs_top_srcdir}/examples/simple/igraph_growing_random_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_growing_random_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_growing_random_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:46: >expout"
echo structure_generators.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:46: "
echo structure_generators.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:46: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  38 ) # 38. structure_generators.at:49: Preference model (igraph_preference_game):
    at_setup_line='structure_generators.at:49'
    at_desc="Preference model (igraph_preference_game):"
    $at_quiet $ECHO_N " 38: Preference model (igraph_preference_game):     $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "38. structure_generators.at:49: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:51: \$CC \${abs_top_srcdir}/examples/simple/igraph_preference_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_preference_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_preference_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:51: >expout"
echo structure_generators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:51: "
echo structure_generators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:51: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  39 ) # 39. structure_generators.at:54: From adjacency matrix (igraph_adjacency):
    at_setup_line='structure_generators.at:54'
    at_desc="From adjacency matrix (igraph_adjacency):"
    $at_quiet $ECHO_N " 39: From adjacency matrix (igraph_adjacency):      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "39. structure_generators.at:54: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:56: \$CC \${abs_top_srcdir}/examples/simple/igraph_adjacency.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_adjacency.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_adjacency.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:56: >expout"
echo structure_generators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:56: "
echo structure_generators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:56: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:56 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  40 ) # 40. structure_generators.at:59: From weighted adjacency matrix (igraph_weighted_adjacency):
    at_setup_line='structure_generators.at:59'
    at_desc="From weighted adjacency matrix (igraph_weighted_adjacency):"
    $at_quiet $ECHO_N " 40: From weighted adjacency matrix (igraph_weighted_adjacency):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "40. structure_generators.at:59: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:61: \$CC \${abs_top_srcdir}/examples/simple/igraph_weighted_adjacency.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_weighted_adjacency.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_weighted_adjacency.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:61: cp \${abs_top_srcdir}/examples/'simple/igraph_weighted_adjacency.out' expout"
echo structure_generators.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_weighted_adjacency.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_weighted_adjacency.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:61: "
echo structure_generators.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:61: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:61 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:61: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  41 ) # 41. structure_generators.at:64: Star graph (igraph_star):
    at_setup_line='structure_generators.at:64'
    at_desc="Star graph (igraph_star):"
    $at_quiet $ECHO_N " 41: Star graph (igraph_star):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "41. structure_generators.at:64: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:66: \$CC \${abs_top_srcdir}/examples/simple/igraph_star.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_star.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_star.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:66: >expout"
echo structure_generators.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:66: "
echo structure_generators.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:66: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:66 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  42 ) # 42. structure_generators.at:69: Lattice graph (igraph_lattice):
    at_setup_line='structure_generators.at:69'
    at_desc="Lattice graph (igraph_lattice):"
    $at_quiet $ECHO_N " 42: Lattice graph (igraph_lattice):                $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "42. structure_generators.at:69: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:71: \$CC \${abs_top_srcdir}/examples/simple/igraph_lattice.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_lattice.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_lattice.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:71: >expout"
echo structure_generators.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:71: "
echo structure_generators.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:71: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:71 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  43 ) # 43. structure_generators.at:74: Ring graph (igraph_ring):
    at_setup_line='structure_generators.at:74'
    at_desc="Ring graph (igraph_ring):"
    $at_quiet $ECHO_N " 43: Ring graph (igraph_ring):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "43. structure_generators.at:74: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:76: \$CC \${abs_top_srcdir}/examples/simple/igraph_ring.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_ring.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_ring.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:76: >expout"
echo structure_generators.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:76: "
echo structure_generators.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:76: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:76 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  44 ) # 44. structure_generators.at:79: Tree graph (igraph_tree):
    at_setup_line='structure_generators.at:79'
    at_desc="Tree graph (igraph_tree):"
    $at_quiet $ECHO_N " 44: Tree graph (igraph_tree):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "44. structure_generators.at:79: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:81: \$CC \${abs_top_srcdir}/examples/simple/igraph_tree.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_tree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_tree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:81: >expout"
echo structure_generators.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:81: "
echo structure_generators.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:81: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:81 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  45 ) # 45. structure_generators.at:84: Full graph (igraph_full):
    at_setup_line='structure_generators.at:84'
    at_desc="Full graph (igraph_full):"
    $at_quiet $ECHO_N " 45: Full graph (igraph_full):                      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "45. structure_generators.at:84: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:86: \$CC \${abs_top_srcdir}/examples/simple/igraph_full.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_full.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_full.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:86: >expout"
echo structure_generators.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:86: "
echo structure_generators.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:86: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:86 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  46 ) # 46. structure_generators.at:89: Graph atlas (igraph_atlas):
    at_setup_line='structure_generators.at:89'
    at_desc="Graph atlas (igraph_atlas):"
    $at_quiet $ECHO_N " 46: Graph atlas (igraph_atlas):                    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "46. structure_generators.at:89: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:91: \$CC \${abs_top_srcdir}/examples/simple/igraph_atlas.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_atlas.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_atlas.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:91: cp \${abs_top_srcdir}/examples/'simple/igraph_atlas.out' expout"
echo structure_generators.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_atlas.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_atlas.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:91: "
echo structure_generators.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:91: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:91 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  47 ) # 47. structure_generators.at:94: Small graph (igraph_small):
    at_setup_line='structure_generators.at:94'
    at_desc="Small graph (igraph_small):"
    $at_quiet $ECHO_N " 47: Small graph (igraph_small):                    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "47. structure_generators.at:94: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:96: \$CC \${abs_top_srcdir}/examples/simple/igraph_small.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_small.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_small.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:96: cp \${abs_top_srcdir}/examples/'simple/igraph_small.out' expout"
echo structure_generators.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_small.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_small.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:96: "
echo structure_generators.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:96: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:96 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  48 ) # 48. structure_generators.at:99: Geomeric random graphs (igraph_grg_game):
    at_setup_line='structure_generators.at:99'
    at_desc="Geomeric random graphs (igraph_grg_game):"
    $at_quiet $ECHO_N " 48: Geomeric random graphs (igraph_grg_game):      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "48. structure_generators.at:99: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:101: \$CC \${abs_top_srcdir}/examples/simple/igraph_grg_game.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_grg_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_grg_game.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:101: >expout"
echo structure_generators.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:101: "
echo structure_generators.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:101: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:101 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  49 ) # 49. structure_generators.at:104: Graphs in LCF notation (igraph_lcf{,_vector}):
    at_setup_line='structure_generators.at:104'
    at_desc="Graphs in LCF notation (igraph_lcf{,_vector}):"
    $at_quiet $ECHO_N " 49: Graphs in LCF notation (igraph_lcf{,_vector}): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "49. structure_generators.at:104: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structure_generators.at:106: \$CC \${abs_top_srcdir}/examples/simple/igraph_lcf.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structure_generators.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_lcf.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_lcf.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:106: >expout"
echo structure_generators.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:106: "
echo structure_generators.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structure_generators.at:106: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structure_generators.at:106 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structure_generators.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-5 ) # Banner 5. structural_properties.at:22
    cat <<\_ATEOF

Structural properties

_ATEOF
    ;;

  50 ) # 50. structural_properties.at:24: Diameter of a graph (igraph_diameter):
    at_setup_line='structural_properties.at:24'
    at_desc="Diameter of a graph (igraph_diameter):"
    $at_quiet $ECHO_N " 50: Diameter of a graph (igraph_diameter):         $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "50. structural_properties.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_diameter.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_diameter.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_diameter.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_diameter.out' expout"
echo structural_properties.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_diameter.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_diameter.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:26: "
echo structural_properties.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  51 ) # 51. structural_properties.at:29: Average geodesic length (igraph_average_path_length):
    at_setup_line='structural_properties.at:29'
    at_desc="Average geodesic length (igraph_average_path_length): "
    $at_quiet $ECHO_N " 51: Average geodesic length (igraph_average_path_length): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "51. structural_properties.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:31: \$CC \${abs_top_srcdir}/examples/simple/igraph_average_path_length.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_average_path_length.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_average_path_length.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:31: >expout"
echo structural_properties.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:31: "
echo structural_properties.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  52 ) # 52. structural_properties.at:34: Google PageRank (igraph_pagerank):
    at_setup_line='structural_properties.at:34'
    at_desc="Google PageRank (igraph_pagerank): "
    $at_quiet $ECHO_N " 52: Google PageRank (igraph_pagerank):             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "52. structural_properties.at:34: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:36: \$CC \${abs_top_srcdir}/examples/simple/igraph_pagerank.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_pagerank.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_pagerank.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:36: cp \${abs_top_srcdir}/examples/'simple/igraph_pagerank.out' expout"
echo structural_properties.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_pagerank.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_pagerank.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:36: "
echo structural_properties.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:36: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  53 ) # 53. structural_properties.at:39: Random rewiring (igraph_rewire):
    at_setup_line='structural_properties.at:39'
    at_desc="Random rewiring (igraph_rewire): "
    $at_quiet $ECHO_N " 53: Random rewiring (igraph_rewire):               $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "53. structural_properties.at:39: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:41: \$CC \${abs_top_srcdir}/examples/simple/igraph_rewire.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_rewire.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_rewire.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:41: cp \${abs_top_srcdir}/examples/'simple/igraph_rewire.out' expout"
echo structural_properties.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_rewire.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_rewire.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:41: "
echo structural_properties.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:41: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:41 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  54 ) # 54. structural_properties.at:44: Get the shortest paths (igraph_get_shortest_paths):
    at_setup_line='structural_properties.at:44'
    at_desc="Get the shortest paths (igraph_get_shortest_paths): "
    $at_quiet $ECHO_N " 54: Get the shortest paths (igraph_get_shortest_paths): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "54. structural_properties.at:44: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:46: \$CC \${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:46: cp \${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths.out' expout"
echo structural_properties.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:46: "
echo structural_properties.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:46: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:46 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  55 ) # 55. structural_properties.at:50: Weighted shortest paths (Dijkstra):
    at_setup_line='structural_properties.at:50'
    at_desc="Weighted shortest paths (Dijkstra): "
    $at_quiet $ECHO_N " 55: Weighted shortest paths (Dijkstra):            $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "55. structural_properties.at:50: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:52: \$CC \${abs_top_srcdir}/examples/simple/dijkstra.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:52 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/dijkstra.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/dijkstra.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:52: cp \${abs_top_srcdir}/examples/'simple/dijkstra.out' expout"
echo structural_properties.at:52 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/dijkstra.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/dijkstra.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:52: "
echo structural_properties.at:52 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:52: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:52 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  56 ) # 56. structural_properties.at:55: Weighted shortest paths (Bellman-Ford):
    at_setup_line='structural_properties.at:55'
    at_desc="Weighted shortest paths (Bellman-Ford): "
    $at_quiet $ECHO_N " 56: Weighted shortest paths (Bellman-Ford):        $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "56. structural_properties.at:55: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:57: \$CC \${abs_top_srcdir}/examples/simple/bellman_ford.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/bellman_ford.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/bellman_ford.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:57: cp \${abs_top_srcdir}/examples/'simple/bellman_ford.out' expout"
echo structural_properties.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/bellman_ford.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/bellman_ford.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:57: "
echo structural_properties.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:57: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  57 ) # 57. structural_properties.at:60: Get the weighted shortest paths (Dijkstra):
    at_setup_line='structural_properties.at:60'
    at_desc="Get the weighted shortest paths (Dijkstra): "
    $at_quiet $ECHO_N " 57: Get the weighted shortest paths (Dijkstra):    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "57. structural_properties.at:60: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:62: \$CC \${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths_dijkstra.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths_dijkstra.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_get_shortest_paths_dijkstra.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:62: cp \${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths_dijkstra.out' expout"
echo structural_properties.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths_dijkstra.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_get_shortest_paths_dijkstra.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:62: "
echo structural_properties.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:62: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  58 ) # 58. structural_properties.at:66: Edge betweenness (igraph_edge_betweenness):
    at_setup_line='structural_properties.at:66'
    at_desc="Edge betweenness (igraph_edge_betweenness): "
    $at_quiet $ECHO_N " 58: Edge betweenness (igraph_edge_betweenness):    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "58. structural_properties.at:66: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:68: \$CC \${abs_top_srcdir}/examples/simple/igraph_edge_betweenness.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:68 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_edge_betweenness.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_edge_betweenness.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:68: cp \${abs_top_srcdir}/examples/'simple/igraph_edge_betweenness.out' expout"
echo structural_properties.at:68 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_edge_betweenness.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_edge_betweenness.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:68: "
echo structural_properties.at:68 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:68: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:68 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  59 ) # 59. structural_properties.at:72: Transitivity (igraph_transitivity):
    at_setup_line='structural_properties.at:72'
    at_desc="Transitivity (igraph_transitivity): "
    $at_quiet $ECHO_N " 59: Transitivity (igraph_transitivity):            $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "59. structural_properties.at:72: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:74: \$CC \${abs_top_srcdir}/examples/simple/igraph_transitivity.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_transitivity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_transitivity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:74: >expout"
echo structural_properties.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:74: "
echo structural_properties.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:74: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:74 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  60 ) # 60. structural_properties.at:77: Reciprocity (igraph_reciprocity):
    at_setup_line='structural_properties.at:77'
    at_desc="Reciprocity (igraph_reciprocity): "
    $at_quiet $ECHO_N " 60: Reciprocity (igraph_reciprocity):              $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "60. structural_properties.at:77: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:79: \$CC \${abs_top_srcdir}/examples/simple/igraph_reciprocity.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:79 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_reciprocity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_reciprocity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:79: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:79: >expout"
echo structural_properties.at:79 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:79: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:79: "
echo structural_properties.at:79 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:79: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:79: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:79 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:79: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  61 ) # 61. structural_properties.at:82: Minimum spanning tree (igraph_minimum_spanning_tree_*):
    at_setup_line='structural_properties.at:82'
    at_desc="Minimum spanning tree (igraph_minimum_spanning_tree_*): "
    $at_quiet $ECHO_N " 61: Minimum spanning tree (igraph_minimum_spanning_tree_*): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "61. structural_properties.at:82: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:84: \$CC \${abs_top_srcdir}/examples/simple/igraph_minimum_spanning_tree.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:84 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_minimum_spanning_tree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_minimum_spanning_tree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:84: cp \${abs_top_srcdir}/examples/'simple/igraph_minimum_spanning_tree.out' expout"
echo structural_properties.at:84 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_minimum_spanning_tree.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_minimum_spanning_tree.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:84: "
echo structural_properties.at:84 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:84: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:84 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  62 ) # 62. structural_properties.at:88: Cocitation and bibcoupling (igraph_cocitation,igraph_bibcoupling):
    at_setup_line='structural_properties.at:88'
    at_desc="Cocitation and bibcoupling (igraph_cocitation,igraph_bibcoupling):"
    $at_quiet $ECHO_N " 62: Cocitation and bibcoupling (igraph_cocitation,igraph_bibcoupling):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "62. structural_properties.at:88: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:90: \$CC \${abs_top_srcdir}/examples/simple/igraph_cocitation.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:90 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_cocitation.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_cocitation.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:90: cp \${abs_top_srcdir}/examples/'simple/igraph_cocitation.out' expout"
echo structural_properties.at:90 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_cocitation.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_cocitation.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:90: "
echo structural_properties.at:90 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:90: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:90 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  63 ) # 63. structural_properties.at:93: Similarity coefficients (igraph_similarity_*):
    at_setup_line='structural_properties.at:93'
    at_desc="Similarity coefficients (igraph_similarity_*):"
    $at_quiet $ECHO_N " 63: Similarity coefficients (igraph_similarity_*): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "63. structural_properties.at:93: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:95: \$CC \${abs_top_srcdir}/examples/simple/igraph_similarity.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:95 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_similarity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_similarity.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:95: cp \${abs_top_srcdir}/examples/'simple/igraph_similarity.out' expout"
echo structural_properties.at:95 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_similarity.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_similarity.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:95: "
echo structural_properties.at:95 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:95: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:95 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  64 ) # 64. structural_properties.at:98: Simplification of non-simple graphs (igraph_simplify):
    at_setup_line='structural_properties.at:98'
    at_desc="Simplification of non-simple graphs (igraph_simplify): "
    $at_quiet $ECHO_N " 64: Simplification of non-simple graphs (igraph_simplify): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "64. structural_properties.at:98: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:100: \$CC \${abs_top_srcdir}/examples/simple/igraph_simplify.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:100 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_simplify.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_simplify.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:100: cp \${abs_top_srcdir}/examples/'simple/igraph_simplify.out' expout"
echo structural_properties.at:100 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_simplify.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_simplify.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:100: "
echo structural_properties.at:100 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:100: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:100 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  65 ) # 65. structural_properties.at:103: Topological sorting (igraph_topological_sorting, igraph_is_dag):
    at_setup_line='structural_properties.at:103'
    at_desc="Topological sorting (igraph_topological_sorting, igraph_is_dag): "
    $at_quiet $ECHO_N " 65: Topological sorting (igraph_topological_sorting, igraph_is_dag): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "65. structural_properties.at:103: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:105: \$CC \${abs_top_srcdir}/examples/simple/igraph_topological_sorting.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:105 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_topological_sorting.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_topological_sorting.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:105: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:105: cp \${abs_top_srcdir}/examples/'simple/igraph_topological_sorting.out' expout"
echo structural_properties.at:105 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_topological_sorting.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_topological_sorting.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:105: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:105: "
echo structural_properties.at:105 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:105: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:105: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:105 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:105: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  66 ) # 66. structural_properties.at:108: Loop edges test (igraph_is_loop):
    at_setup_line='structural_properties.at:108'
    at_desc="Loop edges test (igraph_is_loop): "
    $at_quiet $ECHO_N " 66: Loop edges test (igraph_is_loop):              $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "66. structural_properties.at:108: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:110: \$CC \${abs_top_srcdir}/examples/simple/igraph_is_loop.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:110 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_is_loop.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_is_loop.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:110: cp \${abs_top_srcdir}/examples/'simple/igraph_is_loop.out' expout"
echo structural_properties.at:110 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_is_loop.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_is_loop.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:110: "
echo structural_properties.at:110 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:110: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:110 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  67 ) # 67. structural_properties.at:113: Multiple edges test (igraph_is_multiple):
    at_setup_line='structural_properties.at:113'
    at_desc="Multiple edges test (igraph_is_multiple): "
    $at_quiet $ECHO_N " 67: Multiple edges test (igraph_is_multiple):      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "67. structural_properties.at:113: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:115: \$CC \${abs_top_srcdir}/examples/simple/igraph_is_multiple.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:115 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_is_multiple.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_is_multiple.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:115: cp \${abs_top_srcdir}/examples/'simple/igraph_is_multiple.out' expout"
echo structural_properties.at:115 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_is_multiple.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_is_multiple.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:115: "
echo structural_properties.at:115 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:115: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:115 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  68 ) # 68. structural_properties.at:118: Girth (igraph_girth):
    at_setup_line='structural_properties.at:118'
    at_desc="Girth (igraph_girth): "
    $at_quiet $ECHO_N " 68: Girth (igraph_girth):                          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "68. structural_properties.at:118: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:120: \$CC \${abs_top_srcdir}/examples/simple/igraph_girth.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:120 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_girth.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_girth.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:120: >expout"
echo structural_properties.at:120 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:120: "
echo structural_properties.at:120 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:120: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:120 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  69 ) # 69. structural_properties.at:123: Convergence degree (igraph_convergence_degree):
    at_setup_line='structural_properties.at:123'
    at_desc="Convergence degree (igraph_convergence_degree): "
    $at_quiet $ECHO_N " 69: Convergence degree (igraph_convergence_degree): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "69. structural_properties.at:123: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/structural_properties.at:125: \$CC \${abs_top_srcdir}/examples/simple/igraph_convergence_degree.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo structural_properties.at:125 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_convergence_degree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_convergence_degree.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:125: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:125: cp \${abs_top_srcdir}/examples/'simple/igraph_convergence_degree.out' expout"
echo structural_properties.at:125 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_convergence_degree.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_convergence_degree.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:125: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:125: "
echo structural_properties.at:125 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:125: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/structural_properties.at:125: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo structural_properties.at:125 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/structural_properties.at:125: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-6 ) # Banner 6. components.at:22
    cat <<\_ATEOF

Components

_ATEOF
    ;;

  70 ) # 70. components.at:24: Decompose a graph (igraph_decompose):
    at_setup_line='components.at:24'
    at_desc="Decompose a graph (igraph_decompose):"
    $at_quiet $ECHO_N " 70: Decompose a graph (igraph_decompose):          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "70. components.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/components.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_decompose.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo components.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_decompose.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_decompose.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/components.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/components.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_decompose.out' expout"
echo components.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_decompose.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_decompose.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/components.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/components.at:26: "
echo components.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/components.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/components.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo components.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/components.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-7 ) # Banner 7. layout.at:22
    cat <<\_ATEOF

Layouts

_ATEOF
    ;;

  71 ) # 71. layout.at:24: Large Graph Layout (igraph_layout_lgl):
    at_setup_line='layout.at:24'
    at_desc="Large Graph Layout (igraph_layout_lgl):"
    $at_quiet $ECHO_N " 71: Large Graph Layout (igraph_layout_lgl):        $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "71. layout.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/layout.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_layout_lgl.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo layout.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:26: >expout"
echo layout.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:26: "
echo layout.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo layout.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  72 ) # 72. layout.at:29: Reingold-Tilford tree layout (igraph_layout_reingold_tilford
    at_setup_line='layout.at:29'
    at_desc="Reingold-Tilford tree layout (igraph_layout_reingold_tilford"
    $at_quiet $ECHO_N " 72: Reingold-Tilford tree layout (igraph_layout_reingold_tilford$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "72. layout.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/layout.at:31: \$CC \${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo layout.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:31: >expout"
echo layout.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:31: cp \${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.in ."
echo layout.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.in . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/igraph_layout_reingold_tilford.in . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo layout.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  73 ) # 73. layout.at:35: Covering circle and sphere (igraph_i_layout_sphere_{2,3}d):
    at_setup_line='layout.at:35'
    at_desc="Covering circle and sphere (igraph_i_layout_sphere_{2,3}d):"
    $at_quiet $ECHO_N " 73: Covering circle and sphere (igraph_i_layout_sphere_{2,3}d):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "73. layout.at:35: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/layout.at:37: \$CC \${abs_top_srcdir}/examples/simple/igraph_i_layout_sphere.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo layout.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_i_layout_sphere.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_i_layout_sphere.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:37: >expout"
echo layout.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:37: "
echo layout.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:37: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo layout.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  74 ) # 74. layout.at:40: Merging layouts (igraph_i_layout_merge):
    at_setup_line='layout.at:40'
    at_desc="Merging layouts (igraph_i_layout_merge):"
    $at_quiet $ECHO_N " 74: Merging layouts (igraph_i_layout_merge):       $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "74. layout.at:40: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/layout.at:42: \$CC \${abs_top_srcdir}/examples/simple/igraph_layout_merge.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo layout.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_merge.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_layout_merge.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:42: >expout"
echo layout.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:42: "
echo layout.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/layout.at:42: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo layout.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/layout.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-8 ) # Banner 8. visitors.at:22
    cat <<\_ATEOF

Visitors

_ATEOF
    ;;

  75 ) # 75. visitors.at:24: Breadth-first search (igraph_bfs):
    at_setup_line='visitors.at:24'
    at_desc="Breadth-first search (igraph_bfs):"
    $at_quiet $ECHO_N " 75: Breadth-first search (igraph_bfs):             $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "75. visitors.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/visitors.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_bfs.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo visitors.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_bfs.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_bfs.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/visitors.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/visitors.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_bfs.out' expout"
echo visitors.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_bfs.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_bfs.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/visitors.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/visitors.at:26: "
echo visitors.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/visitors.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/visitors.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo visitors.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/visitors.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-9 ) # Banner 9. topology.at:22
    cat <<\_ATEOF

Graph topology

_ATEOF
    ;;

  76 ) # 76. topology.at:24: The isomorphism class of a subgraph (igraph_isolass_subgraph)
    at_setup_line='topology.at:24'
    at_desc="The isomorphism class of a subgraph (igraph_isolass_subgraph)"
    $at_quiet $ECHO_N " 76: The isomorphism class of a subgraph (igraph_isolass_subgraph)$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "76. topology.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/topology.at:26: \$CC \${abs_top_srcdir}/examples/simple/topology.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo topology.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/topology.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/topology.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/topology.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/topology.at:26: cp \${abs_top_srcdir}/examples/'simple/topology.out' expout"
echo topology.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/topology.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/topology.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/topology.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/topology.at:26: "
echo topology.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/topology.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/topology.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo topology.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/topology.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-10 ) # Banner 10. motifs.at:22
    cat <<\_ATEOF

Motifs

_ATEOF
    ;;

  77 ) # 77. motifs.at:24: RAND-ESU algorithm (igraph_motifs_randesu)
    at_setup_line='motifs.at:24'
    at_desc="RAND-ESU algorithm (igraph_motifs_randesu)"
    $at_quiet $ECHO_N " 77: RAND-ESU algorithm (igraph_motifs_randesu)     $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "77. motifs.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/motifs.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_motifs_randesu.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo motifs.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_motifs_randesu.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_motifs_randesu.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/motifs.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/motifs.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_motifs_randesu.out' expout"
echo motifs.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_motifs_randesu.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_motifs_randesu.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/motifs.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/motifs.at:26: "
echo motifs.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/motifs.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/motifs.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo motifs.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/motifs.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-11 ) # Banner 11. foreign.at:22
    cat <<\_ATEOF

Foreign formats

_ATEOF
    ;;

  78 ) # 78. foreign.at:24: Reading Pajek (igraph_read_graph_pajek):
    at_setup_line='foreign.at:24'
    at_desc="Reading Pajek (igraph_read_graph_pajek):"
    $at_quiet $ECHO_N " 78: Reading Pajek (igraph_read_graph_pajek):       $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "78. foreign.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:26: \$CC \${abs_top_srcdir}/examples/simple/foreign.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/foreign.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/foreign.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:26: cp \${abs_top_srcdir}/examples/'simple/foreign.out' expout"
echo foreign.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/foreign.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/foreign.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:26: cp \${abs_top_srcdir}/examples/simple/LINKS.NET ."
echo foreign.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/LINKS.NET . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/LINKS.NET . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  79 ) # 79. foreign.at:29: GraphML (igraph_{read,write}_graph_graphml):
    at_setup_line='foreign.at:29'
    at_desc="GraphML (igraph_{read,write}_graph_graphml):"
    $at_quiet $ECHO_N " 79: GraphML (igraph_{read,write}_graph_graphml):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "79. foreign.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:31: \$CC \${abs_top_srcdir}/examples/simple/graphml.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/graphml.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/graphml.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:31: cp \${abs_top_srcdir}/examples/'simple/graphml.out' expout"
echo foreign.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/graphml.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/graphml.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:31: cp \${abs_top_srcdir}/examples/simple/{test.gxl,graphml-hsa05010.xml} ."
echo foreign.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/{test.gxl,graphml-hsa05010.xml} . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/{test.gxl,graphml-hsa05010.xml} . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  80 ) # 80. foreign.at:35: Writing Pajek (igraph_write_graph_pajek):
    at_setup_line='foreign.at:35'
    at_desc="Writing Pajek (igraph_write_graph_pajek):"
    $at_quiet $ECHO_N " 80: Writing Pajek (igraph_write_graph_pajek):      $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "80. foreign.at:35: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:37: \$CC \${abs_top_srcdir}/examples/simple/igraph_write_graph_pajek.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_write_graph_pajek.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_write_graph_pajek.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:37: cp \${abs_top_srcdir}/examples/'simple/igraph_write_graph_pajek.out' expout"
echo foreign.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_write_graph_pajek.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_write_graph_pajek.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:37: "
echo foreign.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:37: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:37 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  81 ) # 81. foreign.at:41: Reading an LGL file (igraph_read_graph_lgl):
    at_setup_line='foreign.at:41'
    at_desc="Reading an LGL file (igraph_read_graph_lgl):"
    $at_quiet $ECHO_N " 81: Reading an LGL file (igraph_read_graph_lgl):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "81. foreign.at:41: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:43: \$CC \${abs_top_srcdir}/examples/simple/igraph_read_graph_lgl.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:43 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_read_graph_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_read_graph_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:43: cp \${abs_top_srcdir}/examples/'simple/igraph_read_graph_lgl.out' expout"
echo foreign.at:43 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_read_graph_lgl.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_read_graph_lgl.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:43: cp \${abs_top_srcdir}/examples/{simple/igraph_read_graph_lgl-1.lgl,simple/igraph_read_graph_lgl-2.lgl,simple/igraph_read_graph_lgl-3.lgl} ."
echo foreign.at:43 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/{simple/igraph_read_graph_lgl-1.lgl,simple/igraph_read_graph_lgl-2.lgl,simple/igraph_read_graph_lgl-3.lgl} . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/{simple/igraph_read_graph_lgl-1.lgl,simple/igraph_read_graph_lgl-2.lgl,simple/igraph_read_graph_lgl-3.lgl} . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:43: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:43 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  82 ) # 82. foreign.at:48: Writing LGL (igraph_write_graph_lgl):
    at_setup_line='foreign.at:48'
    at_desc="Writing LGL (igraph_write_graph_lgl):"
    $at_quiet $ECHO_N " 82: Writing LGL (igraph_write_graph_lgl):          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "82. foreign.at:48: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:50: \$CC \${abs_top_srcdir}/examples/simple/igraph_write_graph_lgl.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:50 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_write_graph_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_write_graph_lgl.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:50: >expout"
echo foreign.at:50 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:50: "
echo foreign.at:50 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:50: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:50 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  83 ) # 83. foreign.at:53: Reading a graph from the graph database (igraph_read_graph_graphdb):
    at_setup_line='foreign.at:53'
    at_desc="Reading a graph from the graph database (igraph_read_graph_graphdb):"
    $at_quiet $ECHO_N " 83: Reading a graph from the graph database (igraph_read_graph_graphdb):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "83. foreign.at:53: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:55: \$CC \${abs_top_srcdir}/examples/simple/igraph_read_graph_graphdb.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:55 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_read_graph_graphdb.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_read_graph_graphdb.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:55: cp \${abs_top_srcdir}/examples/'simple/igraph_read_graph_graphdb.out' expout"
echo foreign.at:55 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_read_graph_graphdb.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_read_graph_graphdb.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:55: cp \${abs_top_srcdir}/examples/simple/iso_b03_m1000.A00 ."
echo foreign.at:55 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/iso_b03_m1000.A00 . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/iso_b03_m1000.A00 . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:55: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:55 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  84 ) # 84. foreign.at:60: Reading a GML file (igraph_read_graph_gml):
    at_setup_line='foreign.at:60'
    at_desc="Reading a GML file (igraph_read_graph_gml):"
    $at_quiet $ECHO_N " 84: Reading a GML file (igraph_read_graph_gml):    $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "84. foreign.at:60: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:62: \$CC \${abs_top_srcdir}/examples/simple/gml.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/gml.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/gml.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:62: cp \${abs_top_srcdir}/examples/'simple/gml.out' expout"
echo foreign.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/gml.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/gml.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:62: cp \${abs_top_srcdir}/examples/simple/karate.gml ."
echo foreign.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/karate.gml . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/karate.gml . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:62: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:62 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  85 ) # 85. foreign.at:65: Writing a DOT file (igraph_write_graph_dot):
    at_setup_line='foreign.at:65'
    at_desc="Writing a DOT file (igraph_write_graph_dot):"
    $at_quiet $ECHO_N " 85: Writing a DOT file (igraph_write_graph_dot):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "85. foreign.at:65: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:67: \$CC \${abs_top_srcdir}/examples/simple/dot.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:67 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/dot.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/dot.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:67: cp \${abs_top_srcdir}/examples/'simple/dot.out' expout"
echo foreign.at:67 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/dot.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/dot.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:67: cp \${abs_top_srcdir}/examples/simple/karate.gml ."
echo foreign.at:67 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/karate.gml . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/karate.gml . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:67: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:67 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  86 ) # 86. foreign.at:70: Different line endings:
    at_setup_line='foreign.at:70'
    at_desc="Different line endings:"
    $at_quiet $ECHO_N " 86: Different line endings:                        $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "86. foreign.at:70: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/foreign.at:73: \$CC \${abs_top_srcdir}/examples/simple/lineendings.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo foreign.at:73 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/lineendings.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/lineendings.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:73: cp \${abs_top_srcdir}/examples/'simple/lineendings.out' expout"
echo foreign.at:73 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/lineendings.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/lineendings.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:73: cp \${abs_top_srcdir}/examples/{simple/pajek1.net,simple/pajek2.net,simple/pajek3.net,simple/pajek4.net} ."
echo foreign.at:73 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/{simple/pajek1.net,simple/pajek2.net,simple/pajek3.net,simple/pajek4.net} . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/{simple/pajek1.net,simple/pajek2.net,simple/pajek3.net,simple/pajek4.net} . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/foreign.at:73: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo foreign.at:73 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/foreign.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-12 ) # Banner 12. other.at:22
    cat <<\_ATEOF

Miscellaneous functions

_ATEOF
    ;;

  87 ) # 87. other.at:24: Convex hull calculation (igraph_convex_hull):
    at_setup_line='other.at:24'
    at_desc="Convex hull calculation (igraph_convex_hull):"
    $at_quiet $ECHO_N " 87: Convex hull calculation (igraph_convex_hull):  $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "87. other.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/other.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_convex_hull.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo other.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_convex_hull.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_convex_hull.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/other.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/other.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_convex_hull.out' expout"
echo other.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_convex_hull.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_convex_hull.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/other.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/other.at:26: "
echo other.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/other.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/other.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo other.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/other.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-13 ) # Banner 13. operators.at:22
    cat <<\_ATEOF

Graphs operators

_ATEOF
    ;;

  88 ) # 88. operators.at:24: Disjoint union (igraph_disjoint_union, igraph_dosjoint_union_many):
    at_setup_line='operators.at:24'
    at_desc="Disjoint union (igraph_disjoint_union, igraph_dosjoint_union_many):"
    $at_quiet $ECHO_N " 88: Disjoint union (igraph_disjoint_union, igraph_dosjoint_union_many):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "88. operators.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:27: \$CC \${abs_top_srcdir}/examples/simple/igraph_disjoint_union.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:27 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_disjoint_union.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_disjoint_union.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:27: cp \${abs_top_srcdir}/examples/'simple/igraph_disjoint_union.out' expout"
echo operators.at:27 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_disjoint_union.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_disjoint_union.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:27: "
echo operators.at:27 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:27: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:27 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  89 ) # 89. operators.at:31: Union (igraph_union, igraph_union_many):
    at_setup_line='operators.at:31'
    at_desc="Union (igraph_union, igraph_union_many):"
    $at_quiet $ECHO_N " 89: Union (igraph_union, igraph_union_many):       $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "89. operators.at:31: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:33: \$CC \${abs_top_srcdir}/examples/simple/igraph_union.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_union.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_union.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:33: cp \${abs_top_srcdir}/examples/'simple/igraph_union.out' expout"
echo operators.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_union.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_union.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:33: "
echo operators.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:33: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:33 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  90 ) # 90. operators.at:37: Intersection (igraph_intersection, igraph_intersection_many):
    at_setup_line='operators.at:37'
    at_desc="Intersection (igraph_intersection, igraph_intersection_many):"
    $at_quiet $ECHO_N " 90: Intersection (igraph_intersection, igraph_intersection_many):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "90. operators.at:37: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:39: \$CC \${abs_top_srcdir}/examples/simple/igraph_intersection.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:39 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_intersection.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_intersection.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:39: cp \${abs_top_srcdir}/examples/'simple/igraph_intersection.out' expout"
echo operators.at:39 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_intersection.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_intersection.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:39: "
echo operators.at:39 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:39: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:39 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  91 ) # 91. operators.at:43: Difference (igraph_difference):
    at_setup_line='operators.at:43'
    at_desc="Difference (igraph_difference):"
    $at_quiet $ECHO_N " 91: Difference (igraph_difference):                $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "91. operators.at:43: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:45: \$CC \${abs_top_srcdir}/examples/simple/igraph_difference.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:45 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_difference.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_difference.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:45: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:45: cp \${abs_top_srcdir}/examples/'simple/igraph_difference.out' expout"
echo operators.at:45 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_difference.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_difference.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:45: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:45: "
echo operators.at:45 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:45: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:45: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:45 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:45: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  92 ) # 92. operators.at:49: Complementer (igraph_complementer):
    at_setup_line='operators.at:49'
    at_desc="Complementer (igraph_complementer):"
    $at_quiet $ECHO_N " 92: Complementer (igraph_complementer):            $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "92. operators.at:49: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:51: \$CC \${abs_top_srcdir}/examples/simple/igraph_complementer.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_complementer.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_complementer.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:51: cp \${abs_top_srcdir}/examples/'simple/igraph_complementer.out' expout"
echo operators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_complementer.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_complementer.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:51: "
echo operators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:51: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:51 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  93 ) # 93. operators.at:55: Composition (igraph_compose):
    at_setup_line='operators.at:55'
    at_desc="Composition (igraph_compose):"
    $at_quiet $ECHO_N " 93: Composition (igraph_compose):                  $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "93. operators.at:55: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/operators.at:57: \$CC \${abs_top_srcdir}/examples/simple/igraph_compose.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo operators.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_compose.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_compose.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:57: cp \${abs_top_srcdir}/examples/'simple/igraph_compose.out' expout"
echo operators.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_compose.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_compose.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:57: "
echo operators.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/operators.at:57: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo operators.at:57 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/operators.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-14 ) # Banner 14. conversion.at:22
    cat <<\_ATEOF

Conversion functions

_ATEOF
    ;;

  94 ) # 94. conversion.at:24: Directed to undirected (igraph_to_undirected):
    at_setup_line='conversion.at:24'
    at_desc="Directed to undirected (igraph_to_undirected):"
    $at_quiet $ECHO_N " 94: Directed to undirected (igraph_to_undirected): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "94. conversion.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/conversion.at:26: \$CC \${abs_top_srcdir}/examples/simple/igraph_to_undirected.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo conversion.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_to_undirected.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_to_undirected.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:26: cp \${abs_top_srcdir}/examples/'simple/igraph_to_undirected.out' expout"
echo conversion.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_to_undirected.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_to_undirected.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:26: "
echo conversion.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo conversion.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  95 ) # 95. conversion.at:30: Graphs from adjacency list (igraph_adjlist):
    at_setup_line='conversion.at:30'
    at_desc="Graphs from adjacency list (igraph_adjlist):"
    $at_quiet $ECHO_N " 95: Graphs from adjacency list (igraph_adjlist):   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "95. conversion.at:30: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/conversion.at:32: \$CC \${abs_top_srcdir}/examples/simple/adjlist.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo conversion.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/adjlist.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/adjlist.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:32: >expout"
echo conversion.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:32: "
echo conversion.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/conversion.at:32: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo conversion.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/conversion.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-15 ) # Banner 15. flow.at:22
    cat <<\_ATEOF

Maximum flows and such

_ATEOF
    ;;

  96 ) # 96. flow.at:24: Maximum flow (igraph_maxflow):
    at_setup_line='flow.at:24'
    at_desc="Maximum flow (igraph_maxflow): "
    $at_quiet $ECHO_N " 96: Maximum flow (igraph_maxflow):                 $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "96. flow.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/flow.at:26: \$CC \${abs_top_srcdir}/examples/simple/flow.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo flow.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/flow.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/flow.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:26: >expout"
echo flow.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:26: cp \${abs_top_srcdir}/examples/simple/ak-4102.max ."
echo flow.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/ak-4102.max . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/ak-4102.max . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo flow.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  97 ) # 97. flow.at:29: Minimum cut (igraph_mincut):
    at_setup_line='flow.at:29'
    at_desc="Minimum cut (igraph_mincut): "
    $at_quiet $ECHO_N " 97: Minimum cut (igraph_mincut):                   $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "97. flow.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/flow.at:31: \$CC \${abs_top_srcdir}/examples/simple/igraph_mincut.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo flow.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_mincut.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_mincut.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:31: cp \${abs_top_srcdir}/examples/'simple/igraph_mincut.out' expout"
echo flow.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_mincut.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_mincut.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:31: "
echo flow.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/flow.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo flow.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/flow.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-16 ) # Banner 16. community.at:22
    cat <<\_ATEOF

Community structure

_ATEOF
    ;;

  98 ) # 98. community.at:24: Spinglass clustering (igraph_spinglass_community):
    at_setup_line='community.at:24'
    at_desc="Spinglass clustering (igraph_spinglass_community): "
    $at_quiet $ECHO_N " 98: Spinglass clustering (igraph_spinglass_community): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "98. community.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/community.at:26: \$CC \${abs_top_srcdir}/examples/simple/spinglass.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo community.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/spinglass.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/spinglass.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:26: >expout"
echo community.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; >expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; >expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:26: "
echo community.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo community.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  99 ) # 99. community.at:29: Walktrap community structure (igraph_walktrap_community):
    at_setup_line='community.at:29'
    at_desc="Walktrap community structure (igraph_walktrap_community): "
    $at_quiet $ECHO_N " 99: Walktrap community structure (igraph_walktrap_community): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "99. community.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/community.at:31: \$CC \${abs_top_srcdir}/examples/simple/walktrap.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo community.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/walktrap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/walktrap.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:31: cp \${abs_top_srcdir}/examples/'simple/walktrap.out' expout"
echo community.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/walktrap.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/walktrap.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:31: "
echo community.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:31: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo community.at:31 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:31: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  100 ) # 100. community.at:34: Edge betweenness community structure (igraph_community_edge_betweenness):
    at_setup_line='community.at:34'
    at_desc="Edge betweenness community structure (igraph_community_edge_betweenness): "
    $at_quiet $ECHO_N "100: Edge betweenness community structure (igraph_community_edge_betweenness): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "100. community.at:34: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/community.at:36: \$CC \${abs_top_srcdir}/examples/simple/igraph_community_edge_betweenness.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo community.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_community_edge_betweenness.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_community_edge_betweenness.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:36: cp \${abs_top_srcdir}/examples/'simple/igraph_community_edge_betweenness.out' expout"
echo community.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_community_edge_betweenness.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_community_edge_betweenness.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:36: "
echo community.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:36: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo community.at:36 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  101 ) # 101. community.at:40: Modularity optimization (igraph_community_fastgreedy):
    at_setup_line='community.at:40'
    at_desc="Modularity optimization (igraph_community_fastgreedy): "
    $at_quiet $ECHO_N "101: Modularity optimization (igraph_community_fastgreedy): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "101. community.at:40: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/community.at:42: \$CC \${abs_top_srcdir}/examples/simple/igraph_community_fastgreedy.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo community.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_community_fastgreedy.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_community_fastgreedy.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:42: cp \${abs_top_srcdir}/examples/'simple/igraph_community_fastgreedy.out' expout"
echo community.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_community_fastgreedy.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_community_fastgreedy.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:42: "
echo community.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:42: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo community.at:42 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  102 ) # 102. community.at:46: Leading eigenvector community structure (igraph_community_leading_eigenvector) :
    at_setup_line='community.at:46'
    at_desc="Leading eigenvector community structure (igraph_community_leading_eigenvector) :"
    $at_quiet $ECHO_N "102: Leading eigenvector community structure (igraph_community_leading_eigenvector) :$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "102. community.at:46: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/community.at:48: \$CC \${abs_top_srcdir}/examples/simple/igraph_community_leading_eigenvector.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo community.at:48 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_community_leading_eigenvector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_community_leading_eigenvector.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:48: cp \${abs_top_srcdir}/examples/'simple/igraph_community_leading_eigenvector.out' expout"
echo community.at:48 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_community_leading_eigenvector.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_community_leading_eigenvector.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:48: "
echo community.at:48 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/community.at:48: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo community.at:48 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/community.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-17 ) # Banner 17. cliques.at:24
    cat <<\_ATEOF

Cliques and independent vertex sets.

_ATEOF
    ;;

  103 ) # 103. cliques.at:26: Calculating cliques (igraph_cliques):
    at_setup_line='cliques.at:26'
    at_desc="Calculating cliques (igraph_cliques): "
    $at_quiet $ECHO_N "103: Calculating cliques (igraph_cliques):          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "103. cliques.at:26: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/cliques.at:28: \$CC \${abs_top_srcdir}/examples/simple/igraph_cliques.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo cliques.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_cliques.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_cliques.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:28: cp \${abs_top_srcdir}/examples/'simple/igraph_cliques.out' expout"
echo cliques.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_cliques.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_cliques.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:28: "
echo cliques.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:28: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo cliques.at:28 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  104 ) # 104. cliques.at:31: Calculating independent vertex sets (igraph_independent_vertex_sets):
    at_setup_line='cliques.at:31'
    at_desc="Calculating independent vertex sets (igraph_independent_vertex_sets): "
    $at_quiet $ECHO_N "104: Calculating independent vertex sets (igraph_independent_vertex_sets): $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "104. cliques.at:31: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/cliques.at:35: \$CC \${abs_top_srcdir}/examples/simple/igraph_independent_sets.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo cliques.at:35 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/igraph_independent_sets.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/igraph_independent_sets.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:35: cp \${abs_top_srcdir}/examples/'simple/igraph_independent_sets.out' expout"
echo cliques.at:35 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/igraph_independent_sets.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/igraph_independent_sets.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:35: "
echo cliques.at:35 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/cliques.at:35: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo cliques.at:35 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/cliques.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-18 ) # Banner 18. attributes.at:22
    cat <<\_ATEOF

Attributes from C

_ATEOF
    ;;

  105 ) # 105. attributes.at:24: Reading a Pajek file with attributes:
    at_setup_line='attributes.at:24'
    at_desc="Reading a Pajek file with attributes:"
    $at_quiet $ECHO_N "105: Reading a Pajek file with attributes:          $ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "105. attributes.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/attributes.at:26: \$CC \${abs_top_srcdir}/examples/simple/cattributes.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo attributes.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/cattributes.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/cattributes.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:26: cp \${abs_top_srcdir}/examples/'simple/cattributes.out' expout"
echo attributes.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/cattributes.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/cattributes.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:26: cp \${abs_top_srcdir}/examples/simple/LINKS.NET ."
echo attributes.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/simple/LINKS.NET . ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/simple/LINKS.NET . ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo attributes.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

  106 ) # 106. attributes.at:30: Writing an attributed graph in GML and GraphML:
    at_setup_line='attributes.at:30'
    at_desc="Writing an attributed graph in GML and GraphML:"
    $at_quiet $ECHO_N "106: Writing an attributed graph in GML and GraphML:$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "106. attributes.at:30: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/attributes.at:32: \$CC \${abs_top_srcdir}/examples/simple/cattributes2.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo attributes.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/cattributes2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/cattributes2.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:32: cp \${abs_top_srcdir}/examples/'simple/cattributes2.out' expout"
echo attributes.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/cattributes2.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/cattributes2.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:32: "
echo attributes.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/attributes.at:32: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo attributes.at:32 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/attributes.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  banner-19 ) # Banner 19. arpack.at:22
    cat <<\_ATEOF

ARPACK based functions

_ATEOF
    ;;

  107 ) # 107. arpack.at:24: Eigenvector centrality (igraph_eigenvector_centrality):
    at_setup_line='arpack.at:24'
    at_desc="Eigenvector centrality (igraph_eigenvector_centrality):"
    $at_quiet $ECHO_N "107: Eigenvector centrality (igraph_eigenvector_centrality):$ECHO_C"
    at_xfail=no
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "107. arpack.at:24: testing ..."
      $at_traceon



$at_traceoff
echo "$at_srcdir/arpack.at:26: \$CC \${abs_top_srcdir}/examples/simple/eigenvector_centrality.c -I\${abs_top_srcdir}/include -L\${abs_top_builddir}/src/.libs -ligraph -lm -o itest"
echo arpack.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $CC ${abs_top_srcdir}/examples/simple/eigenvector_centrality.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $CC ${abs_top_srcdir}/examples/simple/eigenvector_centrality.c -I${abs_top_srcdir}/include -L${abs_top_builddir}/src/.libs -ligraph -lm -o itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/arpack.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/arpack.at:26: cp \${abs_top_srcdir}/examples/'simple/eigenvector_centrality.out' expout"
echo arpack.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; cp ${abs_top_srcdir}/examples/'simple/eigenvector_centrality.out' expout ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; cp ${abs_top_srcdir}/examples/'simple/eigenvector_centrality.out' expout ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/arpack.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/arpack.at:26: "
echo arpack.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon;  ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :;  ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff "$at_devnull" "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/arpack.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

$at_traceoff
echo "$at_srcdir/arpack.at:26: DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\${abs_top_builddir}/src/.libs ./itest"
echo arpack.at:26 >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    echo 'Not enabling shell tracing (command contains a ${...} parameter expansion)'
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${abs_top_builddir}/src/.libs LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${abs_top_builddir}/src/.libs ./itest ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
$at_diff "$at_devnull" "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
case $at_status in
   77) echo 77 > "$at_status_file"; exit 77;;
   0) ;;
   *) echo "$at_srcdir/arpack.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then


  echo 1 > "$at_status_file"
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;


  * )
    echo "$as_me: no such test group: $at_group" >&2
    continue
    ;;
  esac

  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  case $at_group in
    banner-*) ;;
    *)
      if test ! -f "$at_check_line_file"; then
	sed "s/^ */$as_me: warning: /" <<_ATEOF
	A failure happened in a test group before any test could be
	run. This means that test suite is improperly designed.  Please
	report this failure to <csardi@rmki.kfki.hu>.
_ATEOF
	echo "$at_setup_line" >"$at_check_line_file"
      fi
      at_group_count=`expr 1 + $at_group_count`
      $at_verbose $ECHO_N "$at_group. $at_setup_line: $ECHO_C"
      echo $ECHO_N "$at_group. $at_setup_line: $ECHO_C" >> "$at_group_log"
      case $at_xfail:$at_status in
	yes:0)
	    at_msg="UNEXPECTED PASS"
	    at_xpass_list="$at_xpass_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
	no:0)
	    at_msg="ok"
	    at_pass_list="$at_pass_list $at_group"
	    at_errexit=false
	    ;;
	*:77)
	    at_msg='skipped ('`cat "$at_check_line_file"`')'
	    at_skip_list="$at_skip_list $at_group"
	    at_errexit=false
	    ;;
	yes:*)
	    at_msg='expected failure ('`cat "$at_check_line_file"`')'
	    at_xfail_list="$at_xfail_list $at_group"
	    at_errexit=false
	    ;;
	no:*)
	    at_msg='FAILED ('`cat "$at_check_line_file"`')'
	    at_fail_list="$at_fail_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
      esac
      # Make sure there is a separator even with long titles.
      echo " $at_msg"
      at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
      case $at_status in
	0|77)
	  # $at_times_file is only available if the group succeeded.
	  # We're not including the group log, so the success message
	  # is written in the global log separately.  But we also
	  # write to the group log in case they're using -d.
	  if test -f "$at_times_file"; then
	    at_log_msg="$at_log_msg	("`sed 1d "$at_times_file"`')'
	    rm -f "$at_times_file"
          fi
	  echo "$at_log_msg" >> "$at_group_log"
	  echo "$at_log_msg" >&5

	  # Cleanup the group directory, unless the user wants the files.
	  if $at_debug_p ; then
	    	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\'''
	    echo "cd '$at_dir'"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$0" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$@"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run

	  elif test -d "$at_group_dir"; then
	    find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	    rm -fr "$at_group_dir"
	  fi
	  ;;
	*)
	  # Upon failure, include the log into the testsuite's global
	  # log.  The failure message is written in the group log.  It
	  # is later included in the global log.
	  echo "$at_log_msg" >> "$at_group_log"

	  # Upon failure, keep the group directory for autopsy, and
	  # create the debugging script.
	  	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\'''
	    echo "cd '$at_dir'"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$0" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$@"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run

	  $at_errexit && break
	  ;;
      esac
      ;;
  esac
done

# Back to the top directory.
cd "$at_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    at_duration_s=`expr $at_stop_time - $at_start_time`
    at_duration_m=`expr $at_duration_s / 60`
    at_duration_h=`expr $at_duration_m / 60`
    at_duration_s=`expr $at_duration_s % 60`
    at_duration_m=`expr $at_duration_m % 60`
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

# Wrap up the test suite with summary statistics.
at_skip_count=`set dummy $at_skip_list; shift; echo $#`
at_fail_count=`set dummy $at_fail_list; shift; echo $#`
at_xpass_count=`set dummy $at_xpass_list; shift; echo $#`
at_xfail_count=`set dummy $at_xfail_list; shift; echo $#`

at_run_count=`expr $at_group_count - $at_skip_count`
at_unexpected_count=`expr $at_xpass_count + $at_fail_count`
at_total_fail_count=`expr $at_xfail_count + $at_fail_count`

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$0" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$0" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$0" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
        at_group_normalized=$at_group

  while :; do
    case $at_group_normalized in #(
    $at_format*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done

        cat "$at_suite_dir/$at_group_normalized/$as_me.log"
        echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  echo "Please send \`${at_testdir+${at_testdir}/}$as_me.log' and all information you think might help:"
  echo
  echo "   To: <csardi@rmki.kfki.hu>"
  echo "   Subject: [igraph 0.5.1] $as_me:$at_fail_list${at_fail_list:+ failed${at_xpass_list:+,}}$at_xpass_list${at_xpass_list:+ passed unexpectedly}"
  echo
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.  Its output may'
    echo "be found below \`${at_testdir+${at_testdir}/}$as_me.dir'."
    echo
  fi
    exit 1
fi

exit 0



